@import 'partials/margin-reset';
@import 'partials/row+column';
@import 'partials/section';

*,
*::before,
*::after {
	box-sizing: border-box;
}

html {
	width: 100%;
	height: 100%;
	font-size: 100%;
}

body {
	width: 100%;
	height: auto;
	padding: 0;
	margin: 0;
	overflow-x: hidden;
	font-family: $font-family-bodycopy;
	font-weight: $font-weight-regular;
	line-height: 1.25;
	color: $color-black;
	letter-spacing: 0;
	background: $color-white;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-size-adjust: 100%;

	html.no-scroll & {
		position: relative;
		margin: 0;
		overflow: hidden;
	}
}

// COMMON ELEMENTS
a {
	color: inherit;
	text-decoration: underline;
	outline: 0;
	box-shadow: none;

	&:hover {
		text-decoration: none;
	}
}

input::-ms-clear {
	display: none;
}

svg {
	display: block;
	width: 100%;
	height: 100%;
	overflow: visible;
}

img {
	max-width: 100%;
}

// COMMON CLASSES

// element with this class should contain `<svg>`
// the svg will be aligned and can be easily scale by `font-size`
.svg {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	vertical-align: middle;

	svg {
		display: inline-block;
		width: 1em;
		max-width: 100%;
		height: 1em;
		max-height: 100%;
	}
}

// transitions
.page-enter-active,
.page-leave-active {
	transition: all 0.4s;
}

.page-enter-from,
.page-leave-to {
	opacity: 0;
}

// DEVELOPMENT STUFF

// `$isDev` variable taken from `nuxt.config.js`
@if $isDev {
	// visual helper for definition of media query
	body {
		&::after {
			@include position(fixed, null 0 0 null);

			z-index: 999;
			padding: 5px 10px;
			font-size: 11px;
			line-height: 1em;
			color: #000000;
			content: '';
			background: rgb(255 255 255 / 75%);
		}

		@each $breakpoint, $size in reverse($breakpoints) {
			@include breakpoint($breakpoint up) {
				&::after {
					content: '#{$breakpoint} [#{$size} (#{strip-unit($size) * 16px}) +]';
				}
			}
		}
	}
}
